// Al usar SCSS podemos seguir utilizando CSS
//Al momento de importar la clase variables le quitamos el _
@import "variables";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: aquamarine;
  color: $primary-color;
  font-family: $maint-font;
}

nav {
  background-color: firebrick;
  .links {
    display: flex;
    gap: 20px;
    align-items: center;
    li {
      list-style: none;
      font-weight: bold;
      a {
        text-decoration: none;
        color: white;
      }
    }
  }
}

/* extends - es código reutilizable
   para crear una extend necesito: 
   %nombreExtend
*/

%parrafos {
  padding: 20px;
  color: indianred;
  text-shadow: 1px 1px 3px white;
  font-size: 18px;
}

.primicia {
  @extend %parrafos;
  font-weight: bold;
}

.noticia {
  @extend %parrafos;
  text-decoration: underline;
}

.publicidad {
  @extend %parrafos;
  border: 1px solid red;
}

// mixin - es reutilizable en forma de función
//función entran valores -> retorna resultado
//@mixin nombre(){}

@mixin border-radius($radius) {
  //el código que indique dentro del mixin
  //será el que sea retornado
  border: 2px solid white;
  box-shadow: 1px 1px 10px white;
  //toma el valor que entro
  border-radius: $radius;
}

.jujutsu {
  width: 200px;
  //include, para ser utilizado en otro bloque de código
  @include border-radius(40%);
}

.redondo {
  padding: 20px;
  @include border-radius(10px);
}

//& referencia al selector padre
.btn {
  padding: 20px;
  background-color: steelblue;
  color: white;
  //el & representa el selector de la clase - .btn
  //sirve más cuando son nombres largos, para no colocar todo el nombre completo
  &:hover {
    font-weight: bold;
    box-shadow: 2px 2px 10px white;
  }
  &--shadow {
    box-shadow: 2px 2px 10px black;
    background-color: lightblue;
    color: black;
  }
}
